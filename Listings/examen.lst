C51 COMPILER V9.60.0.0   EXAMEN                                                            05/13/2023 00:18:27 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE EXAMEN
OBJECT MODULE PLACED IN .\Objects\examen.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE examen.c OPTIMIZE(8,SPEED) BROWSE NOAREGS DEBUG OBJECTEXTEND PRINT(.\Lis
                    -tings\examen.lst) TABS(2) OBJECT(.\Objects\examen.obj)

line level    source

   1          #include <reg552.h>
   2          
   3          #define BASE_DE_TIEMPO 50000
   4          #define FREQ_OSCI      11.0592
   5          
   6          // Declaracion de funciones
   7          
   8          void inicialicizar(void);
   9          unsigned int conversionAD(unsigned char canal);
  10          
  11          // Variables globales
  12          unsigned char TL_carga, TH_carga;
  13          
  14          sbit marcha = 0xC0;
  15          
  16          void main(void)
  17          {
  18   1          inicialicizar();
  19   1      
  20   1          while (1) {
  21   2              while (marcha == 0)
  22   2                  ;
  23   2          }
  24   1      }
  25          
  26          // Definicion de funciones
  27          
  28          void inicialicizar(void)
  29          {
  30   1      
  31   1          // Variables locales
  32   1          unsigned int vi_inicial;
  33   1      
  34   1          // Configuramos el TR en modo 01 16bit modo timer T MODO TMOD!!!!
  35   1          TMOD = 0x01;
  36   1      
  37   1          // Calculo del valor inicial de TR0
  38   1          vi_inicial = (0xFFFF - 1) - BASE_DE_TIEMPO * FREQ_OSCI / 12.0;
  39   1      
  40   1          // Carga en TL0 y TH0
  41   1          TL0 = TL_carga = vi_inicial;
  42   1          TH0 = TH_carga = vi_inicial >> 8;
  43   1      
  44   1          // Habilitacion interrupciones
  45   1          EA  = 1;
  46   1          ET0 = 1;
  47   1      
  48   1          // Ponemos P3.2;P3.3;P3.4;P3.5 a 0 para evitar problemas
  49   1          P3 = 0xC3;
  50   1      
  51   1          // Arrancamos el TR0
  52   1          TR0 = 1;
  53   1      }
  54          
C51 COMPILER V9.60.0.0   EXAMEN                                                            05/13/2023 00:18:27 PAGE 2   

  55          unsigned int conversionAD(unsigned char canal)
  56          {
  57   1      
  58   1          // Variable local para devolver el valor
  59   1          unsigned int resultadoConversion;
  60   1      
  61   1          // Ponemos ADCON al 0
  62   1          ADCON = ADCON & 0x00;
  63   1      
  64   1          // Configuramos ADCON
  65   1          ADCON = ADCON | canal;
  66   1      
  67   1          // Iniciamos la conversion
  68   1          ADCON = ADCON | 0x8;
  69   1      
  70   1          // Esperamos a que la conversion este completada
  71   1      
  72   1          while ((ADCON & (0x10)) == 0)
  73   1              ;
  74   1      
  75   1          // Ponemos ADCI a 0
  76   1          ADCON = ADCON & 0xEF;
  77   1      
  78   1          // Guardamos en resultadoConversion
  79   1      
  80   1          resultadoConversion = (ADCON >> 6) | ADCH << 2;
  81   1      
  82   1          return (resultadoConversion);
  83   1      }
  84          
  85          void interrupcionTR0(void) interrupt 1 using 1
  86          {
  87   1      
  88   1          // Variables locales
  89   1          static unsigned int referenciaTemperatura, temperatura, codigoDigitalReferenciaTemperatura, codigoDigi
             -talTemperatura;
  90   1          int error;
  91   1          static unsigned char contador;
  92   1          // Carga de nuevo valores iniciales TR0
  93   1          TL0 = TL_carga;
  94   1          TH0 = TH_carga;
  95   1      
  96   1          contador++;
  97   1      
  98   1          // Obtenenmos los valores de la referencia de temperatura y la temperatura
  99   1      
 100   1          codigoDigitalReferenciaTemperatura = conversionAD(0);
 101   1          codigoDigitalTemperatura           = conversionAD(1);
 102   1      
 103   1          referenciaTemperatura = (97.5 / 1023) * codigoDigitalReferenciaTemperatura + 25;
 104   1          temperatura           = (97.5 / 1023) * codigoDigitalTemperatura + 25;
 105   1      
 106   1          // Obtenemos el error
 107   1          error = referenciaTemperatura - temperatura;
 108   1      
 109   1          // Segun el signo de error seleccionamos una se;al de salida en P3 y ponemos a cero el contador para v
             -olver a contar 10 segundos
 110   1          if (contador == 200) {
 111   2              if (error > 0) {
 112   3                  P3 = 0xFF;
 113   3              } else if (error <= 0) {
 114   3                  P3 = 0xC3;
C51 COMPILER V9.60.0.0   EXAMEN                                                            05/13/2023 00:18:27 PAGE 3   

 115   3              }
 116   2              contador = 0;
 117   2          }
 118   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    251    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     11    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
