C51 COMPILER V9.60.0.0   EXAMEN                                                            05/20/2023 23:27:38 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE EXAMEN
OBJECT MODULE PLACED IN .\Objects\examen.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE examen.c OPTIMIZE(8,SPEED) BROWSE NOAREGS DEBUG OBJECTEXTEND PRINT(.\Lis
                    -tings\examen.lst) TABS(2) OBJECT(.\Objects\examen.obj)

line level    source

   1          #include <REG552.H>
   2          
   3          #define BaseTiempo                50000
   4          #define FrecOsc                   11.0592
   5          #define DesbordamientosPorSegudo  20
   6          #define Canal_lectura_temperatura 5
   7          
   8          // variables globales
   9          unsigned char TL_0, TH_0;
  10          unsigned char contadorLlenado, contadorTemperatura;
  11          bit primerLlenado;
  12          unsigned int codigoTemperatura;
  13          float temperatura;
  14          bit mantenimientoOut;
  15          
  16          // entradas
  17          sbit marcha              = 0x90;
  18          sbit S1                  = 0x91;
  19          sbit S2                  = 0x92;
  20          sbit control_temperatura = 0x97;
  21          sbit mantenimiento       = 0xB2; // interrupcion externa 0 logica negada un cero lo trataremos como un uno
  22          
  23          
  24              // salidas
  25              sbit LED_M              = 0xC0;
  26          sbit ValvulaVaciado         = 0xC1;
  27          sbit BombaHidraulica        = 0xC2;
  28          sbit LED_T                  = 0xC7;
  29          sbit resistenciaCalentadora = 0xC6;
  30          
  31          void inicializar(void);
  32          unsigned int conversionAD(unsigned char canal);
  33          
  34          void main(void)
  35          {
  36   1          inicializar();
  37   1          while (1) {
  38   2      
  39   2              while ((marcha == 0) || (mantenimientoOut == 1)) {
  40   3                  TR0                 = 0;
  41   3                  contadorLlenado     = 0;
  42   3                  contadorTemperatura = 0;
  43   3                  BombaHidraulica     = 0;
  44   3                  ValvulaVaciado      = 0;
  45   3                  TL0                 = TL_0;
  46   3                  TH0                 = TH_0;
  47   3                  primerLlenado       = 0;
  48   3                  // Si acabamos de hacer un manteniemiento ponemos a cero el bit de registro de entrada al modo
             - mantenimiento
  49   3                  if (mantenimientoOut == 1) { mantenimientoOut = 0; }
  50   3              }
  51   2              while ((marcha == 1)&&(!mantenimientoOut)) {
  52   3      
  53   3                  // Encendemos el led
C51 COMPILER V9.60.0.0   EXAMEN                                                            05/20/2023 23:27:38 PAGE 2   

  54   3                  LED_M = 1;
  55   3      
  56   3                  /*### CONTROL DE TEMPERATURA ###*/
  57   3                  /* Si la bomba hidraulica esta encendida estamos en un ciclo de llenado y el control de temper
             -atura tiene que estar apagado
  58   3                  O si esta la bomba apagada y el control de temperatura apagado reinicia el control de temperat
             -ura y para el TR0  */
  59   3                  if ((BombaHidraulica)) {
  60   4                      LED_T                  = 0;
  61   4                      contadorTemperatura    = 0;
  62   4                      resistenciaCalentadora = 0;
  63   4                  }
  64   3      
  65   3                  if (!BombaHidraulica && !control_temperatura) {
  66   4                      TR0                    = 0;
  67   4                      LED_T                  = 0;
  68   4                      contadorTemperatura    = 0;
  69   4                      resistenciaCalentadora = 0;
  70   4                      TL0                    = TL_0;
  71   4                      TH0                    = TH_0;
  72   4                  }
  73   3      
  74   3                  // Si detectamos que es el primer llenado o el S1 se desactiva ponemos el proceso en marcha
  75   3                  if ((primerLlenado == 0) || (S1 == 0)) {
  76   4                      // Encendemos el TR0, la bomba y la valvula cerrada
  77   4                      TR0             = 1;
  78   4                      BombaHidraulica = 1;
  79   4                      ValvulaVaciado  = 0;
  80   4                  }
  81   3      
  82   3                  /* Comprobamos el contador o si S2 esta activado para parar
  83   3                      el cliclo y dejarlo preparada para comenzar de nuevo*/
  84   3                  if ((contadorLlenado == (10 * DesbordamientosPorSegudo)) || (S2 == 1)) {
  85   4                      ValvulaVaciado  = 1;
  86   4                      BombaHidraulica = 0;
  87   4                      // Paramos el TR0, lo recargamos y a la espera de empezar un nuevo ciclo
  88   4                      TR0             = 0;
  89   4                      TL0             = TL_0;
  90   4                      TH0             = TH_0;
  91   4                      contadorLlenado = 0;
  92   4                      /*Activamos el primer llenado. Esto no cambia hasta que marcha para
  93   4                      y vuelva al reposo. nunca habra un primer llenado mas en el ciclo*/
  94   4                      primerLlenado = 1;
  95   4                  }
  96   3      
  97   3                  /*### CONTROL DE TEMPERATURA ###*/
  98   3      
  99   3                  // Si el control de temperatura esta On y no estamos en proceso de llenado ejecutamos
 100   3                  if ((control_temperatura == 1) && (!BombaHidraulica)) {
 101   4      
 102   4                      // Encendemos el led y TR0
 103   4                      LED_T = 1;
 104   4                      TR0   = 1;
 105   4      
 106   4                      if (contadorTemperatura == (10 * DesbordamientosPorSegudo)) {
 107   5      
 108   5                          // Reset al contador
 109   5                          contadorTemperatura = 0;
 110   5      
 111   5                          // Lectura de temperatura
 112   5                          codigoTemperatura = conversionAD(Canal_lectura_temperatura);
 113   5                          // calculamos la temperatura
C51 COMPILER V9.60.0.0   EXAMEN                                                            05/20/2023 23:27:38 PAGE 3   

 114   5                          temperatura = (130.0 / 1023) * codigoTemperatura - 30.0;
 115   5      
 116   5                          if (temperatura <= 30) {
 117   6                              resistenciaCalentadora = 1;
 118   6                          }
 119   5                          if (temperatura > 30) {
 120   6                              resistenciaCalentadora = 0;
 121   6                          }
 122   5                      }
 123   4                  }
 124   3              }
 125   2          }
 126   1      }
 127          
 128          void inicializar(void)
 129          {
 130   1          // varoables locales
 131   1          unsigned int vi;
 132   1          // configuramos tmod timer 0 16 bits
 133   1          TMOD = 0x01;
 134   1          // Calculamos el valor inicial de del TR0
 135   1          vi = (0xFFFF + 1) - BaseTiempo * FrecOsc / 12.0;
 136   1          // Guardamos los valores iniciales en las variables
 137   1          TL_0 = vi;
 138   1          TH_0 = vi >> 8;
 139   1          // Cargamos lo valores de TR0
 140   1          TL0 = TL_0;
 141   1          TH0 = TH_0;
 142   1          // Habilitamos las interrupciones
 143   1          EA  = 1;
 144   1          ET0 = 1;
 145   1          EX0 = 1;
 146   1          IT0 = 0;
 147   1          // desactivamos los LEDs
 148   1          LED_T = 0;
 149   1          LED_M = 0;
 150   1          // Cerramos la valvula y apagamos la bombahidraulica
 151   1          ValvulaVaciado  = 0;
 152   1          BombaHidraulica = 0;
 153   1          // Ponemos a cero la variable de primer llenado
 154   1          primerLlenado = 0;
 155   1          // Ponemos a cero el control de entrad a mantenimiento
 156   1          mantenimientoOut = 0;
 157   1      }
 158          
 159          void interrupcion(void) interrupt 1 using 2
 160          {
 161   1      
 162   1          // Recargamos el TR0 al entrar en la interrupcion
 163   1          TL0 = TL_0;
 164   1          TH0 = TH_0;
 165   1      
 166   1          // Si estamos llenando el tanque sumamos al contador de llenado
 167   1          if (BombaHidraulica)
 168   1              contadorLlenado = contadorLlenado + 1; // contador++;
 169   1      
 170   1          // Si tenemos el control de temperatura on y no estamos llenando sumamos al contador de temperatura
 171   1          if ((control_temperatura == 1) && (!BombaHidraulica)) {
 172   2              contadorTemperatura++;
 173   2          }
 174   1      }
 175          
C51 COMPILER V9.60.0.0   EXAMEN                                                            05/20/2023 23:27:38 PAGE 4   

 176          unsigned int conversionAD(unsigned char canal)
 177          {
 178   1      
 179   1          ADCON = ADCON & 0x00;  // Borramos ADCON
 180   1          ADCON = ADCON | canal; // Cargamos el canal
 181   1      
 182   1          ADCON = ADCON | 0x08; // Ininciamos la conversion
 183   1      
 184   1          while ((ADCON & 0x10) == 0) // Esperamos a que este completa la conversion
 185   1              ;
 186   1      
 187   1          ADCON = ADCON & 0xEF; // poneoms a 0 ADCI
 188   1      
 189   1          return (ADCON >> 6 | ADCH << 2); // devolvemos el valor
 190   1      }
 191          
 192          void interrupcionMantenimiento(void) interrupt 0 using 3
 193          {
 194   1      
 195   1          // Apagamos todas las salidas
 196   1          BombaHidraulica        = 0; // apagada
 197   1          ValvulaVaciado         = 0; // Cerrada
 198   1          LED_M                  = 0;
 199   1          LED_T                  = 0;
 200   1          resistenciaCalentadora = 0;
 201   1          TR0 = 0;
 202   1      
 203   1          // Activamos el bit que registra la entrada al modo mantenimiento
 204   1          mantenimientoOut = 1;
 205   1          while ((mantenimiento == 0)&&(marcha))
 206   1              ;
 207   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    349    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     10    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      2    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
